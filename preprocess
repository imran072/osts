#!/usr/bin/env bash

# author_name: Kazi Md Imran ID: 23846485

if [[ $# -ne 1 ]]; then
   echo "Error: command is not complete. Expecting a data file to be passed."
   echo "Please recall the script!"
   exit 1
fi


awk -F'\t' 'BEGIN {OFS="\t"} NR==1 { print $1, $2, $3, "Date_of_Breach", $5, "Month", "Year" }
NR>1 {
    # Extract start date from range if present
    if ($4 ~ / - / || $4 ~ /- / || $4 ~ / -/ || $4 ~ /-/ ) {
        gsub(/ - /, "-", $4)
        gsub(/- /, "-", $4)
        gsub(/ -/, "-", $4)
        gsub(/-/, "-", $4)
        split($4, dates, "-")
        start_date = dates[1]
    } else {
        start_date = $4
    }


    # Validate and transform start date
    if (start_date !~ /^[0-9]{1,2}\/[0-9]{1,2}\/[0-9]{2}$/ &&
        start_date !~ /^[0-9]{1,2}\/[0-9]{1,2}\/[0-9]{4}$/) {
        print "Invalid date:", NR
	next
    } else {
        split(start_date, date, /[\/ -]/)
        #month = sprintf("%d", date[1])  # Remove leading zeros from month
        month = date[1] + 0 # remove leading 0 from month
	day = date[2]
        year = date[3]
        if (length(year) == 2) {
	    if (year ~ /^9/) {
	    year = "19" year
	} else {
            year = "20" year
	}
        }
        if (month < 1 || month > 12 || day < 1 || day > 31 || year < 1) {
            print "Invalid date:", NR
	    next
        } else {
            start_date = sprintf("%d/%d/%s", month, day, year)
        }
    }

    # Make the breach-type more uniform remove everything in field after the first comma or slash
    if ($5 ~ /[,\\\/]/) {
	cleaned_breach_type = $5
        sub(/[,\\\/].*/, "", cleaned_breach_type)
    } else {
	 cleaned_breach_type = $5
    }

    # Write the cleaned data to the new file
    print $1, $2, $3, start_date, cleaned_breach_type, month, year
}' $1


